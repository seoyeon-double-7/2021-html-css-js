<div> = divide의 약자, 페이지를 논리적인 섹션으로 분리
ㄴ> 사자의 제목과 설명을 하나의 논리적인 섹션으로 묶고자 할 경우 사용
ㄴ> 블록 수준 요소로서 html 요소를 묶는 컨테이너로 사용, 그래서 한 줄을 차지
ㄴ> <div> 자체로는 의미가 없고 여러 개의 요소를 묶을 때 사용하며 css와 함께 사용하면
      스타일을 적용할 때 유용하게 사용 가능

<span> = html 요소를 묶는 컨테이너
ㄴ> 사용하는 점은 <div>와 동일하나 인라인 요소로서 자신이 필요한 크기만 차지

<div>는 한 줄 다 차지
<span>은 내가 필요한 특정 부분만 차지

*입력 양식*
1. 입력 양식에 데이터를 채워서 서버로 보낸다.
2. 서버는 입력 양식을 받아서 JSP(PHP, Nod 등)와 같은 서버 스크립트로 보낸다.
3. JSP는 입력 데이터를 처리하여 새로운 웹페이지를 생성한다.
4. 입력에 대한 응답으로 새로운 웹페이지가 전달된다.

<form> 요소
<from action="input.jsp" method="post">
	<input type="text" name="input" />
	<input type="submit">
</form>

<action> = 이 데이터를 받아서 누가 처리할 건지, 입력을 처리하는 서버 스크립트 주소 적음
<input> = 사용자로부터 정보를 받아들이는 데 사용
ㄴ> type : 입력 요소의 유형
     ㄴ> text, password, radio, checkbox, file, reset, image, hidden, submit...
     ㄴ> radio : 둘 중 하나 (only 하나만 선택)
     ㄴ> checkbox : 동시에 여러 개 선택 가능
      value : 입력 요소의 초기값
      name : 서버로 전달되는 입력 요소의 이름
ex) <input type="button" value="눌러보세요!" name="button1" />
<method> = 웹 서버에 서버로 보내지는 방법
ㄴ> GET 방식과 POST 방식
ㄴ> GET 방식 : URL 주소 뒤에 파라미터를 붙여서 데이터를 전달하는 방식
                   물음표를 중심으로 해서 뒤가 GET 방식
                   비교적 간단하며 최대 2048 글자까지 전송 가능
                   보안에 약하며 북마크가 가능하고, 뒤로가기가 보장
ㄴ> POST 방식 : URL 주소에 붙이지 않고 HTTP Request 헤더에 포함시켜서 전송
                     길이 제한이 없고 보안이 유지됨
                     캐시가 되지 않고 히스토리가 남지 않음
                     북마크가 불가능하며 뒤로가기가 보장되지 않음